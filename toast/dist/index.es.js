import t,{useRef as r,useEffect as a}from"react";import{connect as e}from"react-redux";import{Toast as o}from"primereact/toast";import{store as s,toast as p,HFNContext as c}from"sami-redux";function i(){return i=Object.assign||function(t){for(var r=1;r<arguments.length;r++){var a=arguments[r];for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&(t[e]=a[e])}return t},i.apply(this,arguments)}const{PROP:n,MERGE:y,CLEAR:d,REF:l,SHOW:m,CLOSE:u}=p,f=e((t=>({toastProps:t.toast.props})),null,null,{context:c,pure:!0})((({toastProps:e})=>{const p=r(null);return a((()=>{s.dispatch({type:l,payload:p})}),[]),t.createElement(o,i({onHide:()=>{}},e,{ref:p}))})),h=(t,r,a)=>Array.isArray(t)?t.map((t=>Object.assign({},{summary:r},"string"==typeof t?{detail:t}:t,{severity:a}))):Object.assign({},{summary:r},"string"==typeof t?{detail:t}:t,{severity:a}),g={props:t=>{s.dispatch({type:n,payload:t})},merge:t=>{s.dispatch({type:y,payload:t})},clear:()=>{s.dispatch({type:d})},success:t=>{const r=h(t,"Success","success");s.dispatch({type:m,payload:r})},info:t=>{const r=h(t,"Information","info");s.dispatch({type:m,payload:r})},warn:t=>{const r=h(t,"Warning","warn");s.dispatch({type:m,payload:r})},error:t=>{const r=h(t,"Error","error");s.dispatch({type:m,payload:r})},custom:t=>{s.dispatch({type:m,payload:t})},close:()=>{s.dispatch({type:u})}};export{f as default,g as toaster};
